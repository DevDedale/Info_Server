
from game.page import Page
from game.scenario import Scenario
from game.camera import Camera

from game.ui.block import Block
from game.ui.action import ActionButton
from game.ui.content import ContentRow, ContentActionRow
from game.ui.row import RowStaticText, RowDynamicText, RowChecklist, RowPasscode, RowButton
from game.ui.row import RowDoor, RowLedBar, RowImageBlock, RowSlider
from game.ui.row import RowPushButton, RowDialogInput
from game.ui.appbar import AppBarDynamicText
import game.ui.html as html

from test_package.test_module import MyTestClass

import time, math, random

class MDC1(Scenario):
    NAME = "Cauchemar"
    DESCRIPTION = "Sc√©nario de la maison du cauchemar"
    AUTOLOAD = False
 
    THEME_MAIN_COLOR = "#454545"
    THEME_APP_BAR_IMAGE_SRC = "/bar_logo.png"
    THEME_APP_BAR_BACKGROUND_SRC = "/bar.png"
    THEME_NAVIGATION_DRAWER_IMAGE_SRC = "/drawer.png"

    def initialize(self):
        pass

    def get_cameras(self):
        srvip = "10-0-0-89.test.jdam.local.magichanism.com"
        unison_mic_url = "wss://{}/unison-microphone/".format(srvip)
        unison_mon_url = "wss://{}/unison-monitor/".format(srvip)

        def mir_url(name, q=""):
            return "wss://{}/mir/streams/{}{}".format(
                srvip, name, q
                )

        camera_positions = [
            ("left", "√† gauche"),
            ("right", "√† droite"),
            ("up", "en haut"),
            ("down", "en bas"),
        ]

        def _on_camera_position(pos):
            self.logic.log_debug("camera pos changed {}".format(pos))

        def _on_message(msg):
            self.logic.log_debug("message to players: {}".format(msg))

        cameras = []
        for i,(name,longname,monzone) in enumerate([
            ("webcam2","Salon","zone0"),
            ("webcam2","Webcam","zone1"),
            ("webcam2","Webcam","zone2"),
            ("webcam2","Webcam","zone3"),
            ("webcam2","Webcam","zone4"),
            ]):
            cameras.append(
                Camera(
                    name + str(i), longname + " " + str(i),
                    mir_url(name, "_lq"), 4/3,
                    mir_url(name, ""), 16/9,
                    unison_mon_url, monzone,
                    unison_mic_url, "test",
                    camera_positions, _on_camera_position,
                    "send message to {}".format(name), _on_message,
                )
            )
        return cameras



    def get_app_bar_ui(self):
        def _update_timer(_):
            timestr = time.strftime("%H:%M:%S")
            self.logic.globals.named("TIMER").set(
                html.span_formatter(timestr, size="20px", smallcaps=True)
            )
        self.logic.scheduler.every(.75, _update_timer)

        return [
            AppBarDynamicText(self.logic.globals.named("TIMER"))
        ]

    def get_ui(self):

        GN = self.logic.globals.named

        GN("lo-necro").set(True)
        GN("lo-satan").set(True)
        GN("lo-pro").set(True)

        GN("invoc-locked").set(True)

        GN("PS1").set(2)

        return [

            Page(
                phase = "Administration",
                name = "Configuration",
                ui = [
                    # -- biblioth√®que --
                    Block(
                        title = "Configuration du salon",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowSlider(GN("A-3"), "ambiance",
                                  vmin=-99, vmax=10, vstep=1, unit="dB",
                                  prepend_icon="mdi-volume-low", append_icon="mdi-volume-high"),
                                RowSlider(GN("A-2"), "bruit foudre",
                                  vmin=-99, vmax=10, vstep=1, unit="dB",
                                  prepend_icon="mdi-volume-low", append_icon="mdi-volume-high"),
                                RowSlider(GN("A-1"), "bruit placard",
                                  vmin=-99, vmax=10, vstep=1, unit="dB",
                                  prepend_icon="mdi-volume-low", append_icon="mdi-volume-high"),
                                RowSlider(GN("A0"), "fuyez...",
                                  vmin=-99, vmax=10, vstep=1, unit="dB",
                                  prepend_icon="mdi-volume-low", append_icon="mdi-volume-high"),
                                RowSlider(GN("A1"), "Ce tombeau...",
                                  vmin=-99, vmax=10, vstep=1, unit="dB",
                                  prepend_icon="mdi-volume-low", append_icon="mdi-volume-high"),
                                RowSlider(GN("A2"), "Plafonnier",
                                  vmin=0, vmax=100, vstep=1, unit="%",
                                  prepend_icon="mdi-lightbulb-off", append_icon="mdi-lightbulb-on"),
                                RowSlider(GN("A3"), "Lampe",
                                  vmin=0, vmax=100, vstep=1, unit="%",
                                  prepend_icon="mdi-lightbulb-off", append_icon="mdi-lightbulb-on"),
                                RowSlider(GN("A4"), "Couloir",
                                  vmin=0, vmax=100, vstep=1, unit="%",
                                  prepend_icon="mdi-lightbulb-off", append_icon="mdi-lightbulb-on"),
                                RowSlider(GN("A5"), "Chevet",
                                  vmin=0, vmax=100, vstep=1, unit="%",
                                  prepend_icon="mdi-lightbulb-off", append_icon="mdi-lightbulb-on"),

                            ]),
                        ],
                        footer = [
                        ],
                    ),

                ]
            ),

            Page(
                phase = "Administration",
                name = "Pr√©paration",
                ui = [
                    # -- biblioth√®que --
                    Block(
                        title = "Pr√©paration de la partie",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("Refermer le placard avec le cadena (code <b>2493</b>)"), RowButton("OK", color="green"),
                            ]),
                            ContentRow([
                                RowStaticText("√âteindre la t√©l√©vision"), RowButton("OK", color="green"),
                            ]),
                            ContentRow([
                                RowStaticText("Fermer la porte du couloir"), RowButton("OK", color="#555"),
                            ]),

                            ContentRow([
                                RowStaticText("D√®s que la salle est pr√™te √† recevoir les joueurs appuyez sur <b>EN ATTENTE DES JOUEURS</b>")
                            ]),
                            ContentActionRow([
                                ActionButton("EN ATTENTE DES JOUEURS")
                            ])
                        ],
                        footer = [
                        ],
                    ),

                ]
            ),

            Page(
                phase = "Premi√®re partie",
                name = "Salon",
                ui = [
                    # -- biblioth√®que --
                    Block(
                        title = "Rangement de la biblioth√®que",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("Les joueurs doivent trouver les 5 livres occultes cach√©s dans la pi√®ce et les placer sur l'√©tag√®re de la biblioth√®que (l'ordre n'importe pas)."),
                                RowChecklist("Livres correctement plac√©s",
                                    values=[
                                        (GN("lo-necro"), "Necronomicon"),
                                        (GN("lo-al"), "L'Alchimie pour les nuls"),
                                        (GN("lo-ver"), "Vermis Mysteriis"),
                                        (GN("lo-satan"), "Satan est mon m√®tre"),
                                        (GN("lo-pro"), "Les proph√©ties vol.16")

                                    ]),

                            ])
                        ],
                        footer = [
                            ActionButton("FORCER LA R√âUSSITE"),
                        ],
                    ),
                    # -- sc√©no --
                    Block(
                        title = "Invocation d√©moniaque",
                        lock = GN("invoc-locked"),
                        lock_text = "Lancer la sc√©nographie pour acc√©der aux contr√¥les.",
                        header = [
                            ActionButton("LANCER LA SC√âNOGRAPHIE"),
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("Les lumi√®res du salon s'√©teignent et une √©paisse fum√©e se r√©pand."),
                            ]),
                            ContentRow([
                                RowButton("üå© FOUDRE üå©",             color="red"),
                                RowButton("CHUTE DU PLACARD",         color="red"),
                                RowButton("üîä \"CE TOMBEAU SERA...\" üîä",   color="blue"),
                                RowButton("üîä \"FUYEZ\" üîä",                color="blue"),
                            ]),
                        ],
                        footer = [
                            ActionButton("RETOUR √Ä LA NORMALE"),
                        ],
                    ),

                    # -- t√©l√©vision --
                    Block(
                        title = "T√©l√©vision",
                        content = [
                            ContentRow([
                                RowStaticText("La t√©l√©vision est bloqu√©e par un code parental. Les joueurs doivent l'entrer avec la t√©l√©commande pour d√©verouiller la t√©l√©vision."),
                                RowPasscode(
                                    "Code parental", 
                                    self.logic.globals.named("PS1"),
                                    expected = "2435"),

                            ]),
                        ],
                        footer = [
                        ],
                    ),


                ]
            ),

            Page(
                phase = "Premi√®re partie",
                name = "Cuisine",

            ),

            Page(
                phase = "Seconde partie",
                name = "Couloir",
                ui = [
                    # -- Couloir --
                    Block(
                        title = "Coffre-fort",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("Un coffre-fort √† <b>ouverture manuelle</b> est cach√© derri√®re le tableau.<br/>Les joueurs trouvent le code √† l'int√©rieur du carnet de voyage."),
                                RowStaticText("Le code du coffre-fort est {}".format(html.span_formatter("8427", color="white", bold=True))),

                            ]),
                            ContentRow([
                                RowButton("üîä \"Cherchez mon carnet...\" üîä",   color="blue"),
                            ]),
                        ],
                        footer = [
                        ],
                    ),
                    # -- Couloir --
                    Block(
                        title = "Acc√®s √† la cave",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("√Ä l'int√©rieur du coffre-fort les joueurs trouvent un m√©daillon qui doit √™tre plac√© sur la porte de la cave pour l'ouvrir."),
                                RowDynamicText("Le m√©daillon {}.".format(html.span_formatter("n'est pas correctement plac√©", color="red"))),

                            ]),
                            ContentActionRow([
                                ActionButton("FORCER L'OUVERTURE")
                            ]),
                        ],
                        footer = [
                        ],
                    ),
                    # -- Couloir --
                    Block(
                        title = "√ânigme du tableau",
                        header = [
                        ],
                        content = [
                            ContentRow([
                                RowStaticText("Les joueurs trouvent derri√®re le deuxi√®me tableau un labyrinthe dessin√©. La r√©solution de ce dernier leur permet d'ouvrir la malle contenant le m√©daillon."),
                                RowImageBlock("Labyrinthe","Version sch√©matique du dessin","https://donjon.bin.sh/fantasy/dungeon/cache/6094136a-56d754fd.png", image_size=(200,"100%")),

                            ]),
                        ],
                        footer = [
                        ],
                    ),

                ]
            ),

            Page(
                phase = "Seconde partie",
                name = "Cave",
                ui = []
            ),

        ]


class MDC3(Scenario):
    NAME = "Cauchemar 2"
    DESCRIPTION = "Sc√©nario alternatif de la maison du cauchemar"
    AUTOLOAD = False
 
    THEME_MAIN_COLOR = "#454545"
    THEME_APP_BAR_IMAGE_SRC = "/favicon-96.webp"
    THEME_NAVIGATION_DRAWER_IMAGE_SRC = ""

    def initialize(self):
        pass

    def get_app_bar_ui(self):
        return []

    def get_ui(self):
        return []

class MDC4(Scenario):
    NAME = "Halloween"
    DESCRIPTION = "Sc√©nario pour la soir√©e Halloween"
    AUTOLOAD = False
 
    THEME_MAIN_COLOR = "#454545"
    THEME_APP_BAR_IMAGE_SRC = "/favicon-96.webp"
    THEME_NAVIGATION_DRAWER_IMAGE_SRC = ""

    def initialize(self):
        pass

    def get_app_bar_ui(self):
        return []

    def get_ui(self):
        return []


